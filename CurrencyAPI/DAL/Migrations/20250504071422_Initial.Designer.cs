// <auto-generated />
using System;
using CurrencyAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurrencyAPI.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250504071422_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("CurrencyAPI.DAL.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("CurrencyAPI.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Roles")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@app.com",
                            Name = "Admin",
                            Password = "$2a$11$p/e6gu6EXaFAkGXz9gMPcu7JwRUbDQOuDV8fBIcbm.Ya6b6CoxJ12",
                            Roles = "Admin,Customer,Analyst"
                        },
                        new
                        {
                            Id = 2,
                            Email = "varun@app.com",
                            Name = "Varun",
                            Password = "$2a$11$vXfJneo3O0VsF/oUPZVqkOzUFBsD/tHoohCKzEriOxCUEnglHk.2q",
                            Roles = "Customer"
                        },
                        new
                        {
                            Id = 3,
                            Email = "teja@app.com",
                            Name = "Teja",
                            Password = "$2a$11$OcSosz1Pj6EG5J20/XBMt.QigCxpg1E9XkGrNnwwdD1lAzkT8Smha",
                            Roles = "Analyst,Customer"
                        });
                });

            modelBuilder.Entity("CurrencyAPI.DAL.Entities.RefreshToken", b =>
                {
                    b.HasOne("CurrencyAPI.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
